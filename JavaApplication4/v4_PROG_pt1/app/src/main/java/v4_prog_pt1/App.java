/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package v4_prog_pt1;

import javax.swing.JOptionPane;

public class App {
    static String userFirstName, userLastName, userName, userPassword;

    public static void main(String[] args) {
        userGather();
    }

    public static void userGather() {
       // int decision;
        byte Decision, decisionReturn;
       

        JOptionPane.showMessageDialog(null, " Welcome to the Kanban board");
        Decision =Byte.parseByte(JOptionPane.showInputDialog("Do you have an existing account? Yes:1,No:2")); 

        if (Decision == 2) {
            JOptionPane.showMessageDialog(null,
                    " Let us help you create an Account.Please fill in the following details:");
            userFirstName = JOptionPane.showInputDialog(null, "Your Name:");
            userLastName = JOptionPane.showInputDialog(null, "Your Last Name (Surname):");
            JOptionPane.showMessageDialog(null,
                    "Pleasure to meet you " + userFirstName
                            + ".Lets now create a User name and Password");
            userName = JOptionPane.showInputDialog(null,
                    "Please note that your username must contain the following:" + "\n" +
                            "- An underscore ( _ )" + "\n" +
                            "- Must be less than 5 Characters");
            // insert usernameTest function here
            boolean passValidUsername = Login.checkUserName(userName);
            while (passValidUsername == false) {
                //Login.registerUser_Name();
                userName = JOptionPane.showInputDialog(null, "Re-enter Username:");
                // ask for input again
                passValidUsername = Login.checkUserName(userName);

            }
            Login.registerUser_SuccessUsername();

            userPassword = JOptionPane.showInputDialog(null,
                    "You are now creating a password, please take note that the following requirements must be met:"
                            + "\n" +
                            "- Minimum of 8 characters" + "\n" +
                            "Must contain:" + "\n" +
                            "- a Capital Letter" + "\n" +
                            "- a Number" + "\n" +
                            "- a Special character");

            // insert passwordTest here
            boolean passValid = Login.checkPasswordComplexity(userPassword);
            while (passValid == false) {
               // Login.registerUser_Password();
                userPassword = JOptionPane.showInputDialog(null, "Please re-input Password:");
                // as for password input again
                passValid = Login.checkPasswordComplexity(userPassword);

            }
            Login.registerUser_SuccessPassword();
            decisionReturn = Byte.parseByte(JOptionPane.showInputDialog(null, "do you want to return to login page? Yes:1 , No:2"));
            if (decisionReturn == 1) {
                // Take user to login
                userName = JOptionPane.showInputDialog(null, "Please Enter Username:");
                Login.checkUserName(userName);
                userPassword = JOptionPane.showInputDialog(null, "Please Enter Password:");
                Login.checkPasswordComplexity(userPassword);
                Login.returnLoginStatus();
            }
        } else {
            if (Decision == 1) {

                JOptionPane.showMessageDialog(null, " Welcome Back");
                userName = JOptionPane.showInputDialog(null, "Please Enter Username:");
                Login.checkUserName(userName);
                userPassword = JOptionPane.showInputDialog(null, "Please Enter Password:");
                Login.checkPasswordComplexity(userPassword);
                Login.returnLoginStatus();


            }
        }

    }
}
